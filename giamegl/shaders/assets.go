// Code generated by go-bindata.
// sources:
// PR-Scanline-horizontal.glsl
// RS_Fixed.cs.glsl
// RS_Kernel_Bell.cs.glsl
// RS_Kernel_BicubicHalf.cs.glsl
// RS_Kernel_Bilinear.cs.glsl
// RS_Kernel_Hermite.cs.glsl
// RS_Kernel_Lanczos2.cs.glsl
// RS_Kernel_Lanczos3.cs.glsl
// RS_Kernel_MitchellOneThird.cs.glsl
// RS_Kernel_NearestNeighbor.cs.glsl
// RS_Repeat.cs.glsl
// RS_Uniform.cs.glsl
// util-Mixing.cs.glsl
// DO NOT EDIT!

package shaders

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _prScanlineHorizontalGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xdf\x6b\xdb\x3e\x10\x7f\xfe\x06\xf2\x3f\x1c\xf4\xc5\x6a\xdc\x90\xc4\x4d\x5f\x5c\x17\xfa\x5d\xc7\xc8\xc3\xc6\x60\x2d\x0c\x46\x29\xb2\x2d\xa5\xc7\x6c\xa9\xc8\x4a\x48\x3a\xfc\xbf\x8f\xb3\xec\x44\x8d\xdb\x2e\x7b\x98\xf3\x62\x9f\x74\x9f\x1f\xa7\xd3\xe5\x64\x2d\x4c\x85\x5a\xc1\x79\x34\x19\x0e\xe8\x77\x92\x0b\x89\x4a\xc0\xe7\xeb\xef\x77\x8b\x2f\xb7\xd3\x0b\xb8\x98\xcf\xa3\x39\x2d\x15\x7c\xab\x57\x36\x30\xd1\x0c\x43\x48\x51\xe5\xa8\x96\x90\xc0\x84\xc1\x4a\xa1\xd4\xa6\x04\xc4\x92\x2f\xc5\xec\x06\xf2\xca\xc6\x5d\x02\x04\x95\xcd\xcf\xa3\x89\x9f\x33\x65\x90\xae\xa4\x14\x06\x8c\xe0\xb9\x56\xc5\x16\xbe\x6a\x54\xb6\x82\x5f\xc3\x01\x00\x80\x2c\x34\xb7\xf0\xd4\xc4\x7e\xdc\xc7\xc3\x41\xfd\x2e\xde\xac\x8f\xb7\x50\xb9\xd8\x88\x1d\x20\x2a\x0b\xe8\x42\x3d\xbc\x42\x67\xbc\x78\xa8\xf0\x59\x3c\x6c\x48\x5c\x08\x5e\x64\xdb\x8b\x3c\x3b\x03\xa8\x62\xaa\x8a\x53\x5a\x59\x6e\x6c\x63\x21\x70\x01\x19\xcd\x58\xdc\xad\x0a\x95\xbf\xb9\xf6\xe1\x51\x64\x3f\xbf\xe1\x52\xbd\x5c\x24\xbd\xb7\xfa\x65\x6c\x38\x58\x6b\xcc\xa1\xe4\xa8\x02\xe6\x1b\x6b\xd8\x21\xd9\x19\x24\xaa\x65\xf1\xf0\xa9\xd0\x29\x2f\x16\x6a\xad\x33\x6e\x51\xab\xc5\xcd\x78\xcb\xc8\x7c\x97\x27\x54\x7e\x64\x16\x8c\x60\xba\xcb\x94\x74\x04\xc4\x78\x95\x10\x04\x6b\x95\xd0\x63\x84\x5d\x19\xd5\x6e\xac\xfd\xb3\xcc\xd1\x50\xb3\xc4\x7e\x4c\x1a\x5d\xf6\x82\x56\x77\x9f\xda\x40\xd0\x9c\x1b\x24\xce\x62\x0c\x08\x97\x44\x49\x2f\xa3\x91\x4f\x6c\x35\x24\xc0\xd3\x2a\x68\x7b\x06\xef\x59\xbc\x5f\x25\xc9\x8d\x80\x04\x26\x63\xe9\xe7\xd1\x43\x2b\xa3\xc4\x3b\x89\x57\x31\x1a\x49\x4e\xf0\x4e\x62\xf7\x64\x5a\x59\x54\x2b\xe1\x85\xeb\xfd\xab\xf3\xc5\x3b\x17\x6d\x2b\x18\x5d\xfa\xf0\x6e\x53\x0a\xc9\xbe\x5b\xac\x3e\xf4\xc0\xc9\x41\x0a\x87\x06\x9a\x6b\x77\x6d\x75\x89\xd9\xc7\x4d\xf6\xc8\xd5\x52\x04\x79\x65\x43\xc0\xb5\xc8\x66\x54\xc3\x80\xb3\x10\xde\x3a\xdc\x90\x3a\xcd\x6a\x38\x6b\xfc\x31\x9f\xb4\x16\x45\x25\xfe\x01\x5b\x89\x2a\xe0\x2d\x61\x08\xe3\x39\x35\xd8\x78\xce\x0e\xeb\x7d\x04\x55\x7a\x0c\x55\x63\x2e\x7d\x87\x48\x6a\xd3\xde\x35\x9a\x00\x9c\xda\x3d\x86\x0d\x5c\x42\x1a\xc3\x66\x34\xda\xdd\xb6\xbf\x14\xb7\xf9\x93\xb8\x69\x4f\x49\xfd\x6a\x0b\x1d\xd7\xa2\x87\xed\x59\x0f\x07\xb5\x1b\xeb\xef\x4c\x29\xb2\xf6\x9f\xbb\xb7\xae\x09\x83\x4c\x60\x11\xc8\x68\x06\x67\x30\x9e\x4b\xe6\x4a\x26\xe3\x06\xec\xcd\x81\xd6\x87\x91\x85\xa6\xaa\x46\x33\x97\xcf\x98\xc3\xf3\x71\x5e\x1b\x7e\x5d\xa9\x5f\x60\xed\xb8\xfe\x47\x5b\xdd\xea\xbb\xe6\x9b\x36\x5f\x5d\x41\x34\x65\x70\x0a\x67\x44\x33\x65\x0e\xbd\x37\x3d\x0f\x40\xb3\x82\x97\x4f\x41\x0b\x02\xa7\xfb\x7f\x3b\x16\xc2\x24\xf4\x3e\x09\xee\x77\x00\x00\x00\xff\xff\x4a\x92\x39\xf9\x25\x07\x00\x00")

func prScanlineHorizontalGlslBytes() ([]byte, error) {
	return bindataRead(
		_prScanlineHorizontalGlsl,
		"PR-Scanline-horizontal.glsl",
	)
}

func prScanlineHorizontalGlsl() (*asset, error) {
	bytes, err := prScanlineHorizontalGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PR-Scanline-horizontal.glsl", size: 1829, mode: os.FileMode(438), modTime: time.Unix(1528780127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_fixedCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x8b\xdb\x30\x10\x85\xef\x06\xff\x87\x81\xbd\x48\xad\xd7\x4d\xec\x64\x2f\x26\x87\xc2\x42\x09\xb4\xbd\xb4\x85\xde\x82\x62\x8f\xd3\xa1\xb2\x14\x24\xc5\x8d\xb7\xec\x7f\x2f\x92\xd6\x2b\x87\xc2\x5e\x8c\x3c\x9a\xef\xcd\xbc\xa7\xbb\x11\x8d\x25\xad\x60\x53\xaf\xf2\x2c\xcf\xee\x3a\xec\x49\x21\x7c\xf9\xf8\xf3\xc7\xfe\xeb\xf7\xf5\x03\x3c\x6c\xb7\xf5\xd6\x5f\x49\x31\xe9\x8b\x63\xe6\x74\x14\x75\xd5\x17\x70\x24\xd5\x91\x3a\xc1\x0e\x56\x1c\x2e\x8a\x7a\x6d\x06\xa0\x41\x9c\xb0\x7a\x04\x83\xf6\x22\x5d\x93\xa8\xba\xa2\x25\xb2\x4e\x48\xab\x7f\xa1\x41\xe5\xc0\xa0\xe8\xb4\x92\x13\xd0\xac\x32\x08\xfb\xbb\x79\x6b\x72\x95\x64\x12\xfd\x02\xf7\x24\x25\x9a\x84\x5b\xd7\x6d\xea\xd5\x92\xae\x39\x1c\x2f\x7d\x8f\x26\xc1\x07\xeb\x84\x71\x7f\xf3\x0c\x00\x80\x46\x6c\x2b\x08\x95\x26\xcf\x9e\x5f\xa5\x80\x49\xdd\x0a\x79\xb0\xf4\x84\x87\xab\x77\x53\xc0\xa2\x32\x45\x7f\xa4\x1a\x1f\xdb\xa8\xa9\x83\x41\x90\x62\x1c\x6e\x74\xcf\xda\xc2\x2e\x9e\xd9\x49\x1e\x3e\x49\x7d\x14\x72\xaf\x46\xdd\x0a\x47\x5a\xed\x1f\xcb\xeb\xc4\x9b\x25\x11\x1d\x45\xee\xac\xed\xcb\x5d\x2f\xb5\x70\x40\xca\xa1\xb2\x08\xbb\xf8\xcf\x42\x0a\x9f\xb5\xe8\x98\x0f\xb1\xf0\xfd\xbc\xbc\x72\xf8\x90\x9e\xf6\x46\x3b\x3e\xd8\x72\x27\x7f\x7e\x1f\xdd\xcf\x6b\xbc\x36\x95\xde\x63\x18\xf1\x8d\x9e\x90\xc5\x3a\x2f\x27\xb8\xbf\xe9\xb9\x87\x75\xc8\xc0\xb3\x23\xb6\x1b\x38\x1b\x1c\x67\x32\x2c\x17\xbb\x8b\x44\xcd\xa3\x42\xbb\x42\xec\x6e\xda\x63\x02\x45\x4a\x82\xc3\xbb\xd9\xfa\x6c\x27\x6c\xe5\xb4\xc1\xff\xc5\x0b\x18\xe8\xca\xfc\x12\x45\xd0\x8e\xdf\xf2\x0f\xf7\x53\x9f\xf3\xec\x5f\x00\x00\x00\xff\xff\x2a\xbc\xb1\xaf\x0e\x03\x00\x00")

func rs_fixedCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_fixedCsGlsl,
		"RS_Fixed.cs.glsl",
	)
}

func rs_fixedCsGlsl() (*asset, error) {
	bytes, err := rs_fixedCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Fixed.cs.glsl", size: 782, mode: os.FileMode(438), modTime: time.Unix(1528782749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_bellCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4b\x6b\xe3\x3a\x14\x5e\xdf\x40\xfe\xc3\x81\x6e\xac\xc4\x71\x5e\x75\xef\xc2\x37\x8b\x40\xe1\x52\x98\x99\x4d\x67\x60\xa0\x94\xa2\x38\x72\x2a\x6a\x4b\x45\x52\x32\x56\x4b\xfe\xfb\x70\x24\xbf\x94\x0c\x93\x45\xac\x73\xf4\x7d\xe7\x7d\x74\x73\x62\x4a\x73\x29\xe0\x76\xbd\x18\x8f\xc6\xa3\x9b\x3d\x2b\xb8\x60\xf0\x75\xfb\xf3\xc7\xc3\xb7\xef\xcb\x3b\xb8\x4b\xd3\x75\xda\x5f\x6c\x61\x85\xb8\x92\x5a\x79\x34\x91\x3a\xec\xe8\x7a\x55\xc4\xb0\xe3\x62\xcf\xc5\x01\x36\xb0\x20\x70\x14\xbc\x90\xaa\x02\x5e\xd1\x03\x5b\xdd\x83\x62\xfa\x58\x9a\xac\x67\xad\x57\x7c\x48\x59\xf6\x94\x5c\xbe\x32\xc5\x84\x01\xde\x92\x2b\xaa\xdf\xb2\xbf\x39\x5c\x5d\x3b\x2c\x78\x59\x32\xd5\xb3\xb4\xd9\xdf\xae\x17\x43\xd2\x9a\xc0\xee\x58\x14\x4c\xc1\xa3\xa1\xca\xdc\xb3\xd2\xd0\xcf\xf1\x08\x00\x80\x9f\x58\xbe\x02\x8d\xea\xcc\x6b\x9c\x62\x8f\x90\x6c\x3c\x3a\x77\x66\x21\x2a\x65\x4e\xcb\x17\xcd\x3f\xd8\x4b\x8d\x79\xc4\x30\xd0\x58\x9f\x19\x17\xd9\x78\x54\x94\x92\x1a\x28\x44\xe4\x0f\x35\xc9\xb0\x88\x27\xc9\xf7\x50\x51\x2e\x22\x02\x81\xf3\x77\xa9\x61\xe3\xcf\xd1\xa1\x7c\xf9\xbf\x94\x3b\x5a\x3e\x88\x93\xcc\xa9\xe1\x52\x3c\xdc\x27\xb5\x25\x4d\x70\xf3\x79\x10\xb6\xca\xf5\x07\x72\xb1\x12\x8f\xfc\x83\x45\xbe\x16\x64\x98\x8a\xf6\xf6\x9d\x79\xaf\xc6\x9f\x4b\x30\xa9\x61\x02\x2e\xc8\xe8\x5d\xea\xa4\x26\x30\x83\x24\x8d\x2f\x51\x36\x40\x59\x8f\xf2\xa0\xd6\x13\x17\xe6\x69\xf5\x0c\xaf\x52\x71\xd8\xc0\x27\x17\x26\xd2\xce\x24\xcc\x60\x4b\x62\x18\x28\xa6\xb0\x85\x29\x24\x29\x39\x87\xdc\x13\x53\x26\xe0\xda\x4b\xae\xbd\xe6\xb6\xf5\x38\xb1\xfc\x16\x72\x59\x4a\xd5\x5c\xf8\xd2\xeb\x63\xd5\xca\x52\x45\x5c\x18\x30\xd8\x3a\x0c\xf3\x69\xf1\x9c\xa1\xf4\x5f\x23\x2e\x9d\x38\x9d\x76\xcd\x09\x58\xd6\x55\x50\x19\xcf\xb2\xc8\x72\xa2\x63\xd9\x0b\x56\x93\x14\x28\xf4\x95\x97\xb4\x7a\x8f\x4c\x1d\xc3\x22\xf6\x0d\x4b\xea\xd9\xb2\xad\x5b\x00\xb7\x3d\xdc\x0e\xe0\xd6\xc3\x43\x82\xcf\xef\x4d\xc1\xa6\x1b\xb4\xc8\xd4\x64\xa6\x9b\x46\x4e\x06\x6a\xdb\xa8\xed\xa5\x57\x57\x30\x98\x36\x03\xf4\x45\xd2\x7d\x33\x40\x71\x33\x8e\xaa\x8e\x41\x59\x82\xe6\xde\xd4\x05\x59\x1f\x2b\xa4\x06\xfa\xb3\x3f\x36\x1f\x6f\x7e\xd3\x7c\xe7\x83\x6e\xb4\x6d\xf3\x59\xe0\xd2\x77\xa9\xfb\x98\xfb\x80\xf0\x32\xc6\x1d\x21\x98\xd6\xbc\x7f\xab\x5c\x85\xba\x42\x86\xbe\x26\xed\x43\x72\xbd\x33\xfe\x79\xf2\x3b\x81\xff\xd3\x60\xf9\xbb\xdb\xc4\x06\x7b\xe5\xf5\xc4\xcd\x24\xce\xe3\x00\x87\xeb\xb0\x6c\x47\xd9\x11\x8c\x54\x2d\x23\xee\x2d\xc6\x50\xf1\x7a\x90\x58\x0b\x18\x04\x41\x62\x1f\x7f\xf3\x49\x7e\x11\x4c\xef\x8c\xbd\xbf\x7a\x53\x3e\xc7\xa3\x7f\x70\xbe\xe8\x4e\x47\x75\xb7\x86\x05\x44\x6e\xa4\x93\x34\x98\x48\xc5\xcc\x51\x09\x58\x24\xff\xa6\x30\x83\x7a\x52\x67\x41\xa3\x3a\xda\xf2\xcf\xbc\x24\x85\x09\x22\x66\x1e\x30\x38\x87\x76\x5a\x37\x18\xf4\xef\x00\x00\x00\xff\xff\xc0\x0a\x6b\x36\x6c\x06\x00\x00")

func rs_kernel_bellCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_bellCsGlsl,
		"RS_Kernel_Bell.cs.glsl",
	)
}

func rs_kernel_bellCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_bellCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_Bell.cs.glsl", size: 1644, mode: os.FileMode(438), modTime: time.Unix(1528782749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_bicubichalfCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xdf\x6b\x3a\x39\x10\x7f\x3e\xc1\xff\x61\xa0\x2f\x89\xbb\xae\xba\x6a\x39\xf0\x7c\xb0\x14\x8e\xc2\xdd\xbd\xf4\x0e\x0e\x4a\x29\xeb\x9a\xb5\xa1\xbb\x49\x49\xa2\xb7\x69\xf1\x7f\x3f\x26\xd9\x5f\xd1\x2f\x5f\x45\x77\x67\x32\x9f\x99\xf9\xcc\x8f\xdc\x9d\x99\xd2\x5c\x0a\x58\x2d\xe7\xe3\xd1\x78\x74\x77\x60\x05\x17\x0c\xfe\xdc\xfd\xfb\xcf\xd3\x5f\x7f\x2f\xee\xe1\x7e\xbd\x5e\xae\xfb\x83\x1d\xa4\xbd\xf0\x00\xf3\x64\x8d\xb0\x32\xb3\xf2\x64\x88\x3a\xee\xb3\x65\x5a\xc4\xb0\xe7\xe2\xc0\xc5\x11\xb6\x30\xa7\x70\x12\xbc\x90\xaa\x02\x5e\x65\x47\x96\x3e\x82\x62\xfa\x54\x9a\x4d\x8f\x5a\xa6\x7c\x08\x59\xf4\x90\x5c\xbe\x33\xc5\x84\x01\xde\x82\xab\x4c\x7f\x6c\x7e\x16\x30\xbd\x0d\x58\xf0\xb2\x64\xaa\x47\x69\x73\x58\x2d\xe7\x43\xd0\x92\xc2\xfe\x54\x14\x4c\xc1\xb3\xc9\x94\x79\x64\xa5\xc9\xbe\xc7\x23\x00\x00\x7e\x66\x79\x0a\x1a\xd5\x1b\xaf\x71\x8a\x03\x9a\x6c\xc6\xa3\x4b\xe7\x16\x48\x29\xf3\xac\x7c\xd3\xfc\x8b\xbd\xd5\xc8\x23\x86\x81\xc6\x7a\x66\x5c\x6c\xc6\xa3\xa2\x94\x99\x81\x42\x10\xff\x52\xd3\x0d\x16\xf1\x2c\xf9\x01\xaa\x8c\x0b\x42\x21\x08\xfe\x29\x35\x6c\xfd\x3b\x39\x96\x6f\xbf\x97\x72\x9f\x95\x4f\xe2\x2c\xf3\xcc\x70\x29\x9e\x1e\x93\xda\xd2\x26\xb9\xd9\x2c\x48\x5b\xe5\xfa\x0b\xb1\x58\x89\x67\xfe\xc5\x88\xaf\x05\x1d\x52\xd1\xde\xbf\x73\xef\xd5\xf8\x71\x04\x93\x1a\x26\xe0\x92\x24\x9f\x52\x27\x35\x85\x29\x24\xeb\xf8\xda\xca\x06\x56\xd6\x5b\x79\xa3\x36\x12\x17\xe6\x25\x7d\x85\x77\xa9\x38\x6c\xe1\x9b\x0b\x43\xb4\x73\x09\x53\xd8\xd1\x18\x06\x8a\x08\x76\x10\x41\xb2\xa6\x97\x10\x7b\x66\xca\x04\x58\x7b\x8d\xb5\xb7\xd8\xb6\x1e\x67\x96\xaf\x20\x97\xa5\x54\xcd\x81\x2f\xbd\x3e\x55\xad\x2c\x15\xe1\xc2\x80\xc1\xd6\x61\x9a\x2f\xf3\xd7\x0d\x4a\xbf\x35\xe2\xc2\x89\x51\xd4\x35\x27\x40\x59\x57\x41\x65\x3c\xca\x22\xca\x89\x0e\x65\xaf\x50\x0d\x29\x50\x18\x2b\x2f\xb3\xea\x93\x98\x3a\x86\x79\xec\x1b\x96\xd4\xd3\x45\x5b\xb7\xc0\xdc\xf6\xe6\x76\x60\x6e\xbd\x79\x08\xf0\xfc\x3e\x14\x6c\xbb\x41\x23\xa6\xa6\x53\xdd\x34\x72\x32\x50\xdb\x46\x6d\xaf\xa3\xba\x82\x41\xd4\x0c\xd0\x1f\x32\x3b\x34\x03\x14\x37\xe3\xa8\xea\x18\x94\xa5\xe8\xee\x43\x5d\x81\xf5\xa9\x42\x68\xa0\xbf\xf8\xd7\xe6\xe1\xdd\x6f\x9b\xe7\x6c\xd0\x8d\xb6\x6d\x9e\x05\x2e\x7d\x47\xdd\xe7\xdc\x27\x84\x87\x31\xee\x08\x45\x5a\xb3\xfe\xea\x72\x15\xea\x0a\x19\xc6\x9a\xb4\x17\xc9\xed\xce\xf8\xeb\xc9\xef\x04\xfe\x47\xc1\xf2\x77\xa7\x89\x0d\xf6\xca\xeb\xa9\x9b\x49\x9c\xc7\x81\x1d\xae\xc3\xa2\x1d\x65\x07\x30\x52\xb5\x88\xb8\xf7\x18\x43\xc5\xeb\x01\xb1\xd6\x60\x90\x04\x8d\x7d\xfe\xcd\x23\xf9\x8f\x22\xbd\x0b\xf6\xfe\xe6\x4e\xf9\x1e\x8f\x7e\xc1\xf9\xca\xf6\x9a\xd4\xdd\x1a\x16\x40\xdc\x48\x2f\x82\x81\x54\xcc\x9c\x94\x00\xf2\x10\xa5\x74\x52\xe3\x17\xa6\x28\x2d\x9d\x04\x51\x97\xff\x25\x70\x83\x97\xed\x8f\xbc\xc0\x04\xea\xf6\x87\xec\xc9\x1a\x26\xf0\xd0\x6b\x22\x20\xbf\xb6\x1a\x77\xbe\x42\x89\x86\x31\x1a\x6f\x73\x24\xf8\x7f\x00\x00\x00\xff\xff\x2c\xaf\xfb\xe5\xa7\x06\x00\x00")

func rs_kernel_bicubichalfCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_bicubichalfCsGlsl,
		"RS_Kernel_BicubicHalf.cs.glsl",
	)
}

func rs_kernel_bicubichalfCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_bicubichalfCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_BicubicHalf.cs.glsl", size: 1703, mode: os.FileMode(438), modTime: time.Unix(1528783740, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_bilinearCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcd\x6a\xe3\x30\x10\x3e\xd7\xe0\x77\x18\xe8\xc5\x6a\x1c\x27\x4e\x9a\x5e\xdc\x1c\x02\x85\xa5\xb0\xbb\x97\xee\xc2\x42\x29\x45\x71\xe4\x54\xd4\x96\x8a\x24\x67\xad\x96\xbc\xfb\x32\x92\x1d\xdb\x09\x6c\x0e\xb1\x34\xf3\x7d\xf3\x3f\xba\x3e\x30\xa5\xb9\x14\x70\xbb\x9c\x87\x41\x18\x5c\xef\x58\xc1\x05\x83\x1f\x9b\x3f\xbf\x1f\x7f\xfe\x4a\xef\xe0\x6e\xb5\x5a\xae\x7a\xc5\x06\x52\xc4\x95\xd4\xca\xda\x44\x6a\xbf\xa5\xcb\x45\x11\xc3\x96\x8b\x1d\x17\x7b\x58\xc3\x9c\x40\x2d\x78\x21\x55\x05\xbc\xa2\x7b\xb6\x78\x00\xc5\x74\x5d\x9a\xac\x67\x2d\x17\x7c\x48\x49\x7b\x4a\x2e\xdf\x98\x62\xc2\x00\xef\xc8\x15\xd5\xef\xd9\xff\x1c\x2e\x2e\x1d\x16\xbc\x2c\x99\xea\x59\xda\xec\x6e\x97\xf3\x21\x69\x49\x60\x5b\x17\x05\x53\xf0\x64\xa8\x32\x0f\xac\x34\xf4\x2b\x0c\x00\x00\xf8\x81\xe5\x0b\xd0\x28\xce\xbc\xc4\x09\x76\x08\xc9\xc2\xe0\x78\x32\x0b\x51\x29\x73\x5a\xbe\x6a\xfe\xc9\x5e\x1b\xcc\x23\x86\x81\xc4\xfa\xcc\xb8\xc8\xc2\xa0\x28\x25\x35\x50\x88\xc8\x1f\x1a\x92\x61\x11\x0f\x92\xef\xa0\xa2\x5c\x44\x04\x46\xce\x3f\xa4\x86\xb5\x3f\x47\xfb\xf2\xf5\x5b\x29\xb7\xb4\x7c\x14\x07\x99\x53\xc3\xa5\x78\x7c\x48\x1a\x4b\xda\xe0\x66\xb3\x51\xd8\x2a\xd7\x9f\xc8\xc5\x4a\x3c\xf1\x4f\x16\xf9\x5a\x90\x61\x2a\xda\xdb\x77\xe6\xbd\x18\x7f\x2e\xc1\xa4\x81\x1b\x70\x41\x46\x1f\x52\x27\x0d\x81\x29\x24\xab\xf8\x1c\x65\x47\x28\xeb\x51\x1e\xd4\x79\xe2\xc2\x3c\x2f\x5e\xe0\x4d\x2a\x0e\x6b\xf8\xe2\xc2\x44\xda\x99\x84\x29\x6c\x48\x0c\x03\xc1\x04\x36\x30\x81\x64\x45\x8e\x63\xee\x81\x29\x33\xe2\xda\x73\xae\xbd\xe4\x76\xf5\x38\xb0\xfc\x16\x72\x59\x4a\xd5\x2a\x7c\xe9\x75\x5d\x75\x77\xa9\x22\x2e\x0c\x18\x6c\x1d\x86\xf9\x3c\x7f\xc9\xf0\x76\xdf\x5e\x53\x77\x9d\x4c\x4e\xcd\x19\xb1\xac\xab\xa0\x32\x9e\x65\x91\xe5\xae\x8e\x65\xcf\x58\x6d\x52\xa0\xd0\x57\x5e\xd2\xea\x23\x32\x4d\x0c\xf3\xd8\x37\x2c\x69\xa6\x69\x57\xb7\x11\xdc\xf6\x70\x3b\x80\x5b\x0f\x1f\x13\x7c\x7e\xef\x0a\xd6\xa7\x41\x8b\x4c\x43\xa6\xba\x6d\xe4\xcd\x40\x6c\x5b\xb1\x3d\xf7\xea\x0a\x06\x93\x76\x80\xbe\x4b\xba\x6b\x07\x28\x6e\xc7\x51\x35\x31\x28\x4b\xd0\xdc\xbb\x3a\x23\xeb\xba\x42\xea\x48\x7e\xf4\xc7\xf6\xe3\xcd\xaf\xdb\xef\x6c\xd0\x8d\xae\x6d\x3e\x0b\x5c\xfa\x53\xea\x3e\xe6\x3e\x20\x54\xc6\xb8\x23\x04\xd3\x9a\xf5\x6f\x95\xab\xd0\xa9\x90\x63\x5f\x37\xdd\x43\x72\xb9\x33\xfe\x79\xf2\x3b\x81\xff\x93\xd1\xf2\x9f\xb4\x89\x1d\xed\x95\x97\x13\x37\x93\x38\x8f\x03\x1c\xae\x43\xda\x8d\xb2\x23\x18\xa9\x3a\x46\xdc\x5b\x8c\xa1\xe2\xcd\x20\xb1\x0e\x30\x08\x82\xc4\x3e\xfe\xf6\x93\xfc\x25\x98\xde\x11\x7b\x7f\xf1\xa6\x7c\x85\xc1\x15\xce\x17\xdd\xea\xc8\xbd\x30\x57\xbc\x80\xa8\x81\x7b\x48\x9d\xee\x4a\x31\x53\x2b\x01\x29\x4c\xa1\x41\xf5\x31\x0c\x3a\xd9\x1c\xad\xfe\x0b\x00\x00\xff\xff\xa5\x12\x57\xf7\x0d\x06\x00\x00")

func rs_kernel_bilinearCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_bilinearCsGlsl,
		"RS_Kernel_Bilinear.cs.glsl",
	)
}

func rs_kernel_bilinearCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_bilinearCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_Bilinear.cs.glsl", size: 1549, mode: os.FileMode(438), modTime: time.Unix(1528783676, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_hermiteCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6b\xe3\x3c\x10\x3e\xbf\x81\xfc\x87\x81\x5e\xac\xc4\x71\x12\xbb\xe9\xc5\xcd\x21\x50\x78\x29\xec\xee\xa5\xbb\xb0\x50\x4a\x51\x1c\x39\x15\xb5\xa5\x22\xc9\x59\xab\x25\xff\x7d\x19\xc9\x9f\x09\x6c\x02\x96\x34\x7a\x9e\xf9\x1e\xdd\x9c\x98\xd2\x5c\x0a\xb8\x4d\x56\xd3\xc9\x74\x72\x73\x60\x39\x17\x0c\xbe\xef\x7e\xff\x7a\xfc\xf1\x73\x7d\x07\x77\x9b\x4d\xb2\xe9\x2f\x76\xb0\x46\x5c\x41\xad\xac\x4c\xa0\x8e\x7b\x9a\xc4\x79\x08\x7b\x2e\x0e\x5c\x1c\x61\x0b\x2b\x02\x95\xe0\xb9\x54\x25\xf0\x92\x1e\x59\xfc\x00\x8a\xe9\xaa\x30\x69\xcf\x4a\x62\x3e\xa4\xac\x7b\x4a\x26\xdf\x98\x62\xc2\x00\x6f\xc9\x25\xd5\xef\xe9\xbf\x0c\xc6\xd7\x06\x73\x5e\x14\x4c\xf5\x2c\x6d\x0e\xb7\xc9\x6a\x48\x4a\x08\xec\xab\x3c\x67\x0a\x9e\x0c\x55\xe6\x81\x15\x86\x7e\x4d\x27\x00\x00\xfc\xc4\xb2\x18\x34\x8a\x53\x2f\x71\x82\x03\x42\xd2\xe9\xe4\xdc\xa9\x85\xa0\x90\x19\x2d\x5e\x35\xff\x64\xaf\x35\xc6\x11\xc2\x40\x62\x7d\x64\x5c\xa4\xd3\x49\x5e\x48\x6a\x20\x17\x81\xdf\xd4\x24\xc5\x24\x9e\x24\x3f\x40\x49\xb9\x08\x08\x8c\x8c\x7f\x48\x0d\x5b\xbf\x0f\x8e\xc5\xeb\xff\x85\xdc\xd3\xe2\x51\x9c\x64\x46\x0d\x97\xe2\xf1\x21\xaa\x2d\x69\x9c\x5b\x2e\x47\x6e\xab\x4c\x7f\x22\x17\x33\xf1\xc4\x3f\x59\xe0\x73\x41\x86\xa1\x68\xaf\xdf\xa9\xf7\x62\xfc\xb9\x00\xa3\x1a\x66\xe0\x9c\x0c\x3e\xa4\x8e\x6a\x02\x0b\x88\x36\xe1\x25\xca\x8e\x50\xd6\xa3\x3c\xa8\xb5\xc4\x85\x79\x8e\x5f\xe0\x4d\x2a\x0e\x5b\xf8\xe2\xc2\x04\xda\xa9\x84\x05\xec\x48\x08\x03\xc1\x1c\x76\x30\x87\x68\x43\xce\x63\xee\x89\x29\x33\xe2\xda\x4b\xae\xbd\xe6\xb6\xf9\x38\xb1\xec\x16\x32\x59\x48\xd5\x5c\xf8\xd4\xeb\xaa\x6c\xcf\x52\x05\x5c\x18\x30\x58\x3a\x74\xf3\x79\xf5\x92\xe2\xe9\xbe\x39\xae\xdd\x71\x3e\xef\x8a\x33\x62\x59\x97\x41\x65\x3c\xcb\x22\xcb\x1d\x1d\xcb\x5e\xb0\x9a\xa0\x40\xa1\xad\xac\xa0\xe5\x47\x60\xea\x10\x56\xa1\x2f\x58\x54\x2f\xd6\x6d\xde\x46\x70\xdb\xc3\xed\x00\x6e\x3d\x7c\x4c\xf0\xf1\xbd\x2b\xd8\x76\x8d\x16\x98\x9a\x2c\x74\x53\xc8\xd9\x40\x6c\x1b\xb1\xbd\xb4\xea\x12\x06\xf3\xa6\x81\xbe\x49\x7a\x68\x1a\x28\x6c\xda\x51\xd5\x21\x28\x4b\x50\xdd\xbb\xba\x20\xeb\xaa\x44\xea\x48\x7e\xf6\xdb\x66\xf1\xea\xb7\xcd\xba\x1c\x54\xa3\x2d\x9b\x8f\x02\x87\xbe\x0b\xdd\xfb\xdc\x3b\x84\x97\x21\xce\x08\xc1\xb0\x96\xfd\x5b\xe5\x32\xd4\x25\x72\x6c\x6b\xd6\x3e\x24\xd7\x33\xe3\x9f\x27\x3f\x13\xf8\x9d\x8f\x86\xbf\xbb\x8d\xec\x68\xae\xbc\x9c\xb8\x9e\xc4\x7e\x1c\xe0\x70\x1c\xd6\x6d\x2b\x3b\x82\x91\xaa\x65\x84\xbd\xc6\x10\x4a\x5e\x0f\x02\x6b\x01\x03\x27\x48\xe8\xfd\x6f\x96\xe8\x0f\xc1\xf0\xce\x58\xfb\xab\x37\xe5\x6b\x3a\xf9\x0f\xfb\x8b\xee\x75\x50\x77\x63\x98\x07\x35\xdc\xc3\x9a\x0c\xba\x51\x31\x53\x29\x01\xf1\xac\xc6\x3f\x2c\x20\x71\xeb\xbc\x73\xfa\xdc\x86\xee\x70\x2b\xb4\xf8\x37\x00\x00\xff\xff\x75\x22\x16\x62\x29\x06\x00\x00")

func rs_kernel_hermiteCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_hermiteCsGlsl,
		"RS_Kernel_Hermite.cs.glsl",
	)
}

func rs_kernel_hermiteCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_hermiteCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_Hermite.cs.glsl", size: 1577, mode: os.FileMode(438), modTime: time.Unix(1528783735, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_lanczos2CsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x6d\x6b\xdb\x30\x10\xfe\xbc\x40\xfe\xc3\x41\xa1\x58\x89\xe3\xf8\x35\x89\xc9\xf2\xc1\x50\x18\x85\x6d\x14\xba\xc1\xa0\x94\xe2\x38\x72\x2a\x6a\x4b\x45\x56\x32\xab\x25\xff\x7d\x48\xb2\x63\x3b\x81\xe5\x43\xac\x3b\xdd\x73\xaf\xcf\xe9\xe6\x88\x79\x45\x18\x85\x30\x70\xc7\xa3\xf1\xe8\x66\x87\x73\x42\x31\xfc\x48\xfe\xfc\xbe\xff\xf9\xcb\x5b\xc0\x22\x8a\x82\xa8\xbb\x48\xc0\xef\x84\x07\x02\x81\xe3\x85\x5e\x14\xfb\x8b\x28\x88\x56\xf1\x32\x0e\xfc\x60\x15\x2e\xfc\x45\x18\x04\xab\xc0\x5f\xc6\x91\xeb\xaf\x56\xa1\x17\x2f\xbd\x45\x1c\xc4\x71\xb0\x8c\x3c\x37\x5a\xf9\x6e\xbc\x0c\xe3\x30\x8c\x62\x15\xb4\x48\x25\x3b\x08\x8b\xef\xb7\x69\xe0\xe7\x36\x6c\x09\xdd\x11\xba\x87\x0d\xb8\x08\x0e\x94\xe4\x8c\x97\x40\xca\x74\x8f\xfd\x3b\xe0\xb8\x3a\x14\x62\xdd\xa1\x02\x9f\xf4\x21\x5e\x07\xc9\xd8\x2b\xe6\x98\x0a\x20\x2d\xb8\x4c\xab\xb7\xf5\xff\x02\xfa\xd7\x01\x73\x52\x14\x98\x77\xa8\x4a\xec\xc2\xc0\xed\x83\x02\x04\xdb\x43\x9e\x63\x0e\x8f\x22\xe5\xe2\x0e\x17\x22\xfd\x1c\x8f\x00\x00\xc8\x11\x67\x3e\x54\x4a\xbd\x36\x1a\xad\xd8\x29\x93\xf5\x78\x74\x5a\x77\xf5\x83\x55\xb0\x2c\x2d\x5e\x2a\xf2\x81\x5f\x6a\x55\x89\x0d\x3d\x8d\x34\xb5\x11\xba\x1e\x8f\xf2\x82\xa5\x02\x72\x6a\x99\x43\x8d\xb4\x9b\x23\x23\x3b\x28\x53\x42\x2d\x04\x83\xf0\xef\xac\x82\x8d\x39\x5b\xfb\xe2\xe5\x5b\xc1\xb6\x69\x71\x4f\x8f\x2c\x4b\x05\x61\xf4\xfe\xce\xa9\x25\x6a\xd2\x9b\xcf\x07\x89\xf3\xac\xfa\x50\x58\xd5\x8b\x47\xf2\x81\x2d\xd3\x0d\xd4\x2f\xa6\x32\xfe\xb5\x7b\xa3\x56\x3f\x5d\xa2\x53\xc3\x04\x74\x92\xd6\x3b\xab\x9c\x1a\xc1\x0c\x9c\xc8\xbe\xb4\x92\x03\x2b\x69\xac\x8c\x51\x1b\x89\x50\xf1\xe4\x3f\xc3\x2b\xe3\x04\x36\xf0\x49\xa8\xb0\x2a\xed\x12\x66\x90\x20\x1b\x7a\x8a\x29\x24\x30\x05\x27\x42\xa7\x21\xf6\x88\xb9\x18\x60\xe5\x25\x56\x5e\x63\xdb\x7e\x1c\x71\x16\x42\xc6\x0a\xc6\x9b\x0b\xd3\xfa\xea\x50\xb6\x32\xe3\x16\xa1\x02\x84\x1a\x9d\x4a\xf3\xc9\x7d\x5e\x2b\xe9\x6b\x23\x7a\x5a\x9c\x4e\xcf\xc3\x19\xa0\xa4\xee\x20\x17\x06\x25\x15\x4a\x8b\x1a\x25\x2f\x50\x4d\x51\xc0\x55\xac\xac\x48\xcb\x77\x4b\xd4\x36\xb8\xb6\x19\x98\x53\xcf\xbc\xb6\x6f\x03\x73\xd9\x99\xcb\x9e\xb9\x34\xe6\x43\x80\xa9\xef\x8d\xc3\xe6\x4c\x34\x4b\xd4\x68\x56\x35\x83\x9c\xf4\xd4\xb2\x51\xcb\xcb\xa8\xba\x61\x30\x6d\x08\xf4\x9d\xa5\xbb\x86\x40\x76\x43\x47\x5e\xdb\xc0\x25\x52\xee\xde\xf8\x05\xb8\x3a\x94\x0a\x3a\xd0\x9f\xcc\xb1\xf9\x18\xf7\x9b\xe6\x3b\xef\x4d\xa3\x1d\x9b\xa9\x42\xad\xfd\xb9\x74\x93\x73\x97\x90\xba\xb4\xd5\x8e\x20\x55\xd6\xbc\x7b\xfa\x74\x87\xce\x8d\x1c\xc6\x9a\xb4\x4f\xc9\xf5\xce\x98\x07\xca\xec\x84\xfa\x9f\x0e\xd6\xff\x7c\xeb\xc8\xc1\x5e\x19\x3d\xd2\x9c\x54\x7c\xec\xd9\xa9\x75\xf0\x5a\x2a\x6b\x80\x60\xbc\x45\xd8\x9d\x47\x1b\x4a\x52\xf7\x0a\x6b\x0d\x7a\x49\x20\xdb\xe4\xdf\x7c\x9c\xbf\x48\x95\x77\x52\xb3\xbf\x7a\x53\x3e\xc7\xa3\x2f\x24\x07\xab\x86\x8d\x7a\x88\x7b\xf4\xe3\x58\x1c\x38\x3d\xe7\xd4\x0c\x43\xd9\xce\x12\x45\xdc\x1a\x6e\x6f\x41\x13\x3f\x19\xd0\xb6\xc1\x59\x09\x4c\xa0\x22\xd4\x7a\x20\x13\x4d\x24\x75\x36\xc2\x3c\x41\x6a\x04\xd6\x03\x81\x09\xe8\x3f\xf5\x80\xd4\x68\x18\xa9\xf1\xe3\xaa\xd4\xff\x05\x00\x00\xff\xff\xb2\x6d\xc3\xe4\xc1\x06\x00\x00")

func rs_kernel_lanczos2CsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_lanczos2CsGlsl,
		"RS_Kernel_Lanczos2.cs.glsl",
	)
}

func rs_kernel_lanczos2CsGlsl() (*asset, error) {
	bytes, err := rs_kernel_lanczos2CsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_Lanczos2.cs.glsl", size: 1729, mode: os.FileMode(438), modTime: time.Unix(1528783754, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_lanczos3CsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x6f\x6b\xf3\x36\x10\x7f\xbd\x40\xbe\xc3\xc1\x03\x0f\x56\xe2\x38\xb6\x65\x27\x31\x59\x5e\x18\x0a\xa3\xb0\x8d\x42\x37\x18\x94\x52\x1c\x47\x4e\x45\x6d\xa9\xc8\x4a\x66\xb5\xe4\xbb\x0f\x49\x76\x6c\x27\xb0\xbc\x88\x75\xa7\xfb\xdd\xdf\xdf\xe9\xc7\x99\x88\x9a\x72\x06\x11\xf6\xa7\x93\xe9\xe4\xc7\x81\x14\x94\x11\xf8\x23\xfd\xe7\xef\xc7\x3f\xff\x0a\x56\xb0\x8a\x63\x1c\xf7\x17\x29\xe0\x5e\x78\xa2\x80\xbd\x20\x0a\xe2\x24\x5c\xc5\x38\xde\x24\xeb\x04\x87\x78\x13\xad\xc2\x55\x84\xf1\x06\x87\xeb\x24\xf6\xc3\xcd\x26\x0a\x92\x75\xb0\x4a\x70\x92\xe0\x75\x1c\xf8\xf1\x26\xf4\x93\x75\x94\x44\x51\x9c\xe8\xa0\x65\xa6\xf8\x49\x3a\xe2\xb8\xcf\x70\x58\xb8\xb0\xa7\xec\x40\xd9\x11\x76\xe0\x23\x38\x31\x5a\x70\x51\x01\xad\xb2\x23\x09\x1f\x40\x90\xfa\x54\xca\x6d\x8f\xc2\x21\x1d\x42\x82\x1e\x92\xf3\x77\x22\x08\x93\x40\x3b\x70\x95\xd5\x1f\xdb\xff\x0b\x18\xde\x07\x2c\x68\x59\x12\xd1\xa3\x6a\x79\x88\xb0\x3f\x04\x61\x04\xfb\x53\x51\x10\x01\xcf\x32\x13\xf2\x81\x94\x32\xfb\x9e\x4e\x00\x00\xe8\x99\xe4\x21\xd4\x5a\xbd\xb5\x1a\xa3\x38\x68\x93\xed\x74\x72\xd9\xf6\xf5\x83\x53\xf2\x3c\x2b\xdf\x6a\xfa\x45\xde\x1a\x5d\x89\x0b\x03\x8d\xb2\xb5\x51\xb6\x9d\x4e\x8a\x92\x67\x12\x0a\xe6\xd8\x43\x83\x8c\x9b\x33\xa7\x07\xa8\x32\xca\x1c\x04\xa3\xf0\x9f\xbc\x86\x9d\x3d\x3b\xc7\xf2\xed\xb7\x92\xef\xb3\xf2\x91\x9d\x79\x9e\x49\xca\xd9\xe3\x83\xd7\x28\xd4\xa6\xb7\x5c\x8e\x12\x17\x79\xfd\xa5\xb1\xba\x17\xcf\xf4\x8b\x38\xb6\x1b\x68\x58\x4c\x6d\xfd\x1b\xf7\x56\xad\x7f\xa6\x44\xaf\x81\x19\x98\x24\x9d\x4f\x5e\x7b\x0d\x82\x05\x78\xb1\x7b\x6b\xa5\x46\x56\xca\x5a\x59\xa3\x2e\x12\x65\xf2\x25\x7c\x85\x77\x2e\x28\xec\xe0\x9b\x32\xe9\xd4\xc6\x25\x2c\x20\x45\x2e\x0c\x14\x73\x48\x61\x0e\x5e\x8c\x2e\x63\xec\x99\x08\x39\xc2\xaa\x5b\xac\xba\xc7\x76\xfd\x38\x93\x3c\x82\x9c\x97\x5c\xb4\x17\xb6\xf5\xf5\xa9\xea\x64\x2e\x1c\xca\x24\x48\x3d\x3a\x9d\xe6\x8b\xff\xba\xd5\xd2\xaf\xad\x18\x18\x71\x3e\xbf\x0e\x67\x84\x52\xa6\x83\x42\x5a\x94\xd2\x28\x23\x1a\x94\xba\x41\xb5\x45\x81\xd0\xb1\xf2\x32\xab\x3e\x1d\xd9\xb8\xe0\xbb\x76\x60\x5e\xb3\x08\xba\xbe\x8d\xcc\x55\x6f\xae\x06\xe6\xca\x9a\x8f\x01\xb6\xbe\x0f\x01\xbb\x2b\xd1\x1c\xd9\xa0\x45\xdd\x0e\x72\x36\x50\xab\x56\xad\x6e\xa3\x9a\x86\xc1\xbc\x25\xd0\xef\x3c\x3b\xb4\x04\x72\x5b\x3a\x8a\xc6\x05\xa1\x90\x76\xf7\x21\x6e\xc0\xf5\xa9\xd2\xd0\x91\xfe\x62\x8f\xed\xc7\xba\xdf\xb5\xdf\xe5\x60\x1a\xdd\xd8\x6c\x15\x7a\xed\xaf\xa5\xdb\x9c\xfb\x84\xf4\xa5\xab\x77\x04\xe9\xb2\x96\xfd\xd3\x67\x3a\x74\x6d\xe4\x38\xd6\xac\x7b\x4a\xee\x77\xc6\x3e\x50\x76\x27\xf4\xff\x7c\xb4\xfe\xd7\x5b\x4f\x8d\xf6\xca\xea\x91\xe1\xa4\xe6\xe3\xc0\x4e\xaf\x43\xd0\x51\xd9\x00\x24\x17\x1d\xc2\xed\x3d\xba\x50\xd1\x66\x50\x58\x67\x30\x48\x02\xb9\x36\xff\xf6\xe3\xfd\x8b\x74\x79\x17\x3d\xfb\xbb\x37\xe5\x7b\x3a\xf9\x85\x16\xe0\x34\xb0\xd3\x0f\xf1\x80\x7e\x82\xc8\x93\x60\xd7\x9c\xda\x61\x68\xdb\x45\xaa\x89\xdb\xc0\xcf\x9f\x60\x88\x9f\x8e\x68\xdb\xe2\x9c\x14\x66\x50\x53\xe6\x3c\xd1\x99\x21\x92\x3e\x5b\x61\x99\x22\x3d\x02\xe7\x89\xc2\x0c\xcc\x9f\x7e\x40\x1a\x34\x8e\xd4\xfa\xf1\x75\xea\xff\x05\x00\x00\xff\xff\x7f\x49\x4d\xde\xc1\x06\x00\x00")

func rs_kernel_lanczos3CsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_lanczos3CsGlsl,
		"RS_Kernel_Lanczos3.cs.glsl",
	)
}

func rs_kernel_lanczos3CsGlsl() (*asset, error) {
	bytes, err := rs_kernel_lanczos3CsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_Lanczos3.cs.glsl", size: 1729, mode: os.FileMode(438), modTime: time.Unix(1528783772, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_mitchellonethirdCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x5b\x6b\xeb\x38\x10\x7e\x6e\x20\xff\x61\xa0\x2f\x92\x6f\xf1\x25\x09\x5d\xd2\x3c\x24\x2d\x2c\x85\xdd\x7d\xe9\x2e\x2c\x94\x52\x1c\x47\x4e\x45\x6d\xab\xc8\x4a\x8e\xd5\x92\xff\x7e\x18\xcb\x8e\x2f\x39\x1c\x07\x62\xeb\x9b\xf9\xe6\x3e\xba\x3d\x31\x59\x72\x51\xc0\x3c\xf2\xa7\x93\xe9\xe4\x76\xcf\x52\x5e\x30\xf8\x7b\xf3\xff\x7f\x4f\xff\xfc\x1b\x2c\x61\xb9\x58\x44\x8b\x4e\xb0\x81\xb0\x3b\x6c\xc1\xf7\xa2\xd1\xd3\x49\x1f\x7e\x29\x9d\x4e\xb2\x58\x8b\xa3\x22\xf2\xb0\x8b\xa3\x30\x75\x60\xc7\x8b\x3d\x2f\x0e\xb0\x06\x9f\xc2\xb1\xe0\xa9\x90\x39\xf0\x3c\x3e\xb0\xf0\x11\x24\x2b\x8f\x99\x5a\x75\xac\x28\xe4\x7d\x4a\xd0\x51\x12\xf1\xce\x24\x2b\x14\xf0\x96\x9c\xc7\xe5\xc7\xea\x77\x0e\xc3\x6b\x87\x29\xcf\x32\x26\x3b\x56\xa9\xf6\xf3\xc8\xef\x93\x22\x0a\xbb\x63\x9a\x32\x09\xcf\x2a\x96\xea\x91\x65\x2a\xfe\x9e\x4e\x00\x00\xf8\x89\x25\x21\x94\x08\xaf\x0c\x52\x03\x7b\x54\x59\x4d\x27\xe7\x8b\x59\x20\x99\x48\xe2\xec\xad\xe4\x5f\xec\xad\xc2\x3c\x1c\xe8\x21\xda\x64\xc6\x8b\xd5\x74\x92\x66\x22\x56\x90\x16\xc4\x7c\x54\x74\x85\x45\x3c\x09\xbe\x87\x3c\xe6\x05\xa1\x30\x70\xfe\x29\x4a\x58\x9b\x6f\x72\xc8\xde\xfe\xcc\xc4\x2e\xce\x9e\x8a\x93\x48\x62\xc5\x45\xf1\xf4\xe8\x55\x9a\x36\xc1\xcd\x66\x83\xb0\x65\x52\x7e\x21\x17\x2b\xf1\xcc\xbf\x18\x31\xb5\xa0\xfd\x54\x4a\x63\xbf\x36\x6f\x60\x7c\xea\x04\xbd\x0a\x2c\xa8\x83\x24\x9f\xa2\xf4\x2a\x0a\x2e\x78\x0b\x67\xac\xa5\x07\x5a\xda\x68\x19\xa5\xd6\x13\x2f\xd4\x4b\xf8\x0a\xef\x42\x72\x58\xc3\x37\x2f\x14\x29\x6b\x93\xe0\xc2\x86\x3a\xd0\x03\x6c\xd8\x80\x0d\xde\x82\x9e\x87\xdc\x13\x93\x6a\xc0\xd5\x63\xae\xbe\xe6\xb6\xf5\x38\xb1\x64\x0e\x89\xc8\x84\x6c\x04\xa6\xf4\xe5\x31\x6f\xcf\x42\x12\x5e\x28\x50\xd8\x3a\x0c\xf3\xc5\x7f\x5d\xe1\xe9\xbe\x39\x06\xf5\xd1\xb6\x2f\xcd\x19\xb0\x74\x5d\x41\xa9\x0c\x4b\x23\xab\x3e\xd6\x2c\x3d\x62\x35\x49\x81\x44\x5f\x49\x16\xe7\x9f\x44\x55\x0e\xf8\x8e\x69\x98\x57\xb9\x41\x5b\xb7\x81\xba\xee\xd4\x75\x4f\x5d\x1b\xf5\x21\xc1\xe4\xf7\x21\x61\x7d\x19\x34\xa2\x2a\xea\x96\x4d\x23\xad\x1e\xac\x1b\x58\x8f\xbd\xd6\x05\x03\xbb\x19\xa0\xbf\x44\xbc\x6f\x06\xc8\x69\xc6\x51\x56\x0e\x48\x4d\xd1\xdc\x87\x1c\x91\xcb\x63\x8e\xd4\x01\x7e\x36\x9f\xcd\xcb\x98\x5f\x37\xef\x59\xaf\x1b\x6d\xdb\x4c\x16\xb8\xf4\x97\xd4\x4d\xcc\x5d\x40\x28\x74\x70\x47\x28\xa6\x35\xeb\xee\xb9\xba\x42\x97\x42\x0e\x7d\x59\xed\x45\x72\xbd\x33\xe6\x7a\x32\x3b\x81\xff\xf6\x60\xf9\x2f\x52\x4f\x0f\xf6\xca\xe0\xb4\x9e\x49\x9c\xc7\x9e\x1e\xae\x43\xd0\x8e\x72\x4d\x50\x42\xb6\x0c\xa7\xb3\xe8\x40\xce\xab\x5e\x62\xad\x42\x2f\x08\xea\x98\xf8\x9b\x97\xf7\x83\x62\x7a\x67\xec\xfd\xd5\x9d\xf2\x3d\x9d\xdc\xe0\x7c\xc5\xbb\x92\xd4\x37\xcc\x0d\x4f\x49\x05\xf7\x78\x0b\xa1\xec\x46\x32\x75\x94\x05\x10\x12\x84\xee\x1f\xd6\xd6\x5d\x5a\x0f\xd4\xaa\xf0\x07\x36\x10\x37\xb8\xb3\x83\xd0\xda\xda\x2d\x8c\xe0\x12\x5c\x08\xad\x2d\xc5\x3a\x2f\xd1\xe4\xb9\x33\x1b\x8e\xcd\xba\x63\x93\x4b\x6b\x6b\x47\x7e\xcf\x9c\x8b\x0e\xdc\xf9\x5d\x0d\x21\x70\x67\x6d\xc1\x86\x70\x6e\x3d\x0c\x5d\x34\x36\x7d\x4c\xf6\x67\x00\x00\x00\xff\xff\x46\x3b\xfd\xd9\xe0\x06\x00\x00")

func rs_kernel_mitchellonethirdCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_mitchellonethirdCsGlsl,
		"RS_Kernel_MitchellOneThird.cs.glsl",
	)
}

func rs_kernel_mitchellonethirdCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_mitchellonethirdCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_MitchellOneThird.cs.glsl", size: 1760, mode: os.FileMode(438), modTime: time.Unix(1528783780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_kernel_nearestneighborCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcd\x6a\xe3\x30\x10\x3e\xc7\xe0\x77\x18\x28\x14\xab\x71\x9c\xbf\xba\x17\x37\x87\x40\x61\x29\xec\xee\xa5\xbb\xb0\x50\x4a\x51\x1c\x39\x15\x95\xa5\x22\xc9\x5e\xab\x25\xef\xbe\x48\xb2\x63\x3b\x81\xcd\x21\xd6\x8c\xe6\x9b\x99\x6f\x7e\x74\x55\x13\xa9\xa8\xe0\x70\xbb\x5e\x84\x41\x18\x5c\xed\x49\x41\x39\x81\x1f\xdb\x3f\xbf\x1f\x7f\xfe\x5a\xde\xc1\x5d\x9a\xae\xd3\xfe\x62\x0b\xce\x8e\x61\x23\x2a\x1d\xc9\xc3\x0e\xaf\x57\x45\x0c\x3b\xca\xf7\x94\x1f\x60\x03\x0b\x04\x15\xa7\x85\x90\x25\xd0\x12\x1f\xc8\xea\x01\x24\x51\x15\xd3\x59\x8f\x5a\xaf\xe8\x10\xb2\xec\x21\xb9\x78\x23\x92\x70\x0d\xb4\x03\x97\x58\xbd\x67\xff\x0b\xb8\xba\x0c\x58\x50\xc6\x88\xec\x51\x4a\xef\x6f\xd7\x8b\x21\x68\x8d\x60\x57\x15\x05\x91\xf0\xa4\xb1\xd4\x0f\x84\x69\xfc\x15\x06\x00\x00\xb4\x26\xf9\x0a\x94\x55\x67\x5e\xe3\x14\x7b\x6b\x92\x85\xc1\x31\xeb\xf9\x43\xc4\x44\x8e\xd9\xab\xa2\x9f\xe4\xb5\xb1\x4c\x62\x18\x68\x8c\xe7\x46\x79\x16\x06\x05\x13\x58\x43\xc1\x23\x7f\x68\x90\x73\x53\x0b\xba\x87\x12\x53\x1e\x21\x18\x85\xff\x10\x0a\x36\xfe\x1c\x1d\xd8\xeb\x37\x26\x76\x98\x3d\xf2\x5a\xe4\x58\x53\xc1\x1f\x1f\x92\xc6\xa0\x36\xbd\xf9\x7c\x94\xb8\xcc\xd5\xa7\xc5\xda\x5a\x3c\xd1\x4f\x12\xf9\x6a\xa0\x21\x19\xe5\xfd\x3b\xf7\x5e\x6d\x7f\x8e\x62\xd2\xc0\x0d\xb8\x24\xa3\x0f\xa1\x92\x06\xc1\x0c\x92\x34\x3e\xb7\x32\x23\x2b\xe3\xad\xbc\x51\x17\x89\x72\xfd\xbc\x7a\x81\x37\x21\x29\x6c\xe0\x8b\x72\x1d\x29\xe7\x12\x66\xb0\x45\x31\x0c\x14\x53\xd8\xc2\x14\x92\x14\x1d\xc7\xd8\x9a\x48\x3d\xc2\x9a\x73\xac\xb9\xc4\x76\xf5\xa8\x49\x7e\x0b\xb9\x60\x42\xb6\x17\xbe\xf4\xaa\x2a\x3b\x59\xc8\x88\x72\x0d\xda\xb6\xce\xa6\xf9\xbc\x78\xc9\xac\x74\xdf\x8a\x4b\x27\x4e\xa7\xa7\xe6\x8c\x50\xc6\x55\x50\x6a\x8f\x32\x16\xe5\x44\x87\x32\x67\xa8\x96\x14\x48\x1b\x2b\x67\xb8\xfc\x88\x74\x13\xc3\x22\xf6\x0d\x4b\x9a\xd9\xb2\xab\xdb\xc8\xdc\xf4\xe6\x66\x60\x6e\xbc\xf9\x18\xe0\xf9\xbd\x4b\xd8\x9c\x06\x2d\xd2\x0d\x9a\xa9\xb6\x91\x37\x03\xb5\x69\xd5\xe6\x3c\xaa\x2b\x18\x4c\xdb\x01\xfa\x2e\xf0\xbe\x1d\xa0\xb8\x1d\x47\xd9\xc4\x20\x0d\xb2\xee\xde\xe5\x19\x58\x55\xa5\x85\x8e\xf4\x47\x7f\x6c\x3f\xde\xfd\xa6\xfd\xce\x07\xdd\xe8\xda\xe6\x59\xd8\xb5\x3f\x51\xf7\x39\xf7\x09\xd9\xcb\xd8\xee\x08\xb2\xb4\xe6\xfd\x6b\xe5\x2a\x74\x2a\xe4\x38\xd6\x4d\xf7\x94\x5c\xee\x8c\x7f\xa0\xfc\x4e\xd8\xff\xe9\x68\xfd\x4f\xb7\x89\x19\xed\x95\xd7\x23\x37\x93\x76\x1e\x07\x76\x76\x1d\x96\xdd\x28\x3b\x80\x16\xb2\x43\xc4\xbd\xc7\x18\x4a\xda\x0c\x88\x75\x06\x83\x24\x50\xec\xf3\x6f\x3f\xc9\x5f\x64\xe9\x1d\x6d\xef\x2f\xde\x94\xaf\x30\x98\xd0\x02\xa2\x59\x92\xc2\x3d\x34\x70\x7d\x0d\x6e\x98\x93\xd4\xcd\xe2\x64\x22\x89\xae\x24\x77\xa9\x4d\x8e\x61\xd0\xc9\x0b\xeb\xf1\x5f\x00\x00\x00\xff\xff\x07\x70\x21\x16\x0b\x06\x00\x00")

func rs_kernel_nearestneighborCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_kernel_nearestneighborCsGlsl,
		"RS_Kernel_NearestNeighbor.cs.glsl",
	)
}

func rs_kernel_nearestneighborCsGlsl() (*asset, error) {
	bytes, err := rs_kernel_nearestneighborCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Kernel_NearestNeighbor.cs.glsl", size: 1547, mode: os.FileMode(438), modTime: time.Unix(1528783638, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_repeatCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x8b\xdb\x30\x10\xbd\x07\xf2\x1f\x06\x96\x82\xd5\x7a\xdd\xc4\x4e\xf6\x62\x72\x28\x2c\x94\x40\xdb\x43\x3f\xa0\xb7\xa0\xd8\xe3\x74\xa8\x2c\x05\x49\x71\xed\x2d\xf9\xef\x45\x16\x8a\x62\x5c\xf6\x62\xe4\x99\x79\xef\xcd\x7b\xd2\x43\x87\xda\x90\x92\xb0\x29\x56\xcb\xc5\x72\xf1\x50\x63\x43\x12\xe1\xf3\x87\x9f\x3f\xf6\x5f\xbe\xaf\x9f\xe0\x69\xbb\x2d\xb6\xae\x25\xf8\xa0\x2e\x36\xd1\xa7\x23\x2f\xf2\x26\x85\x23\xc9\x9a\xe4\x09\x76\xb0\x62\x70\x91\xd4\x28\xdd\x02\xb5\xfc\x84\xf9\x33\x68\x34\x17\x61\xcb\x88\x2a\x72\xba\x87\xac\x23\xa4\x52\xbf\x50\xa3\xb4\x40\x01\xdc\x72\xf3\xbb\x7c\x4d\x30\x9f\x0b\x36\x24\x04\xea\x88\x32\xb6\xde\x14\xab\x7b\x50\xc1\xe0\x78\x69\x1a\xd4\xf0\x15\xcf\xc8\xed\x5e\x36\xea\xef\x72\x01\x00\x40\x1d\x56\x39\x18\xcb\xb5\x5b\x39\x56\xf4\x38\xa8\x1c\xed\xf5\x46\x0d\x89\x50\x15\x17\x07\x43\x2f\x78\xe8\x9d\x97\x14\xee\x2a\x83\x77\x47\xb2\x74\xa1\x75\x8a\x6a\x68\x39\xc9\x84\xc1\x44\xec\xac\x0c\xec\xfc\x39\x39\x89\xc3\x47\xa1\x8e\x5c\xec\x65\xa7\x2a\x6e\x49\xc9\xfd\x73\xd6\x0f\x6c\xb2\x8c\x77\xe8\x71\x67\x65\xfe\xd3\x73\xfa\x8e\xd4\x45\xf2\x8d\x5e\x30\xf1\xe5\x40\x73\x23\xc8\x7a\x78\xb3\xbb\x99\xcb\xfa\x59\x7f\x98\xf4\x87\xd0\x17\x8a\x5b\x20\x69\x51\x1a\xa7\x33\xfe\x27\xa3\xda\x27\xc5\xeb\xc4\x5d\x5b\xea\x56\x63\x59\xcf\xe0\x7d\x7c\x43\x63\x12\xd3\x5c\xdd\xeb\x98\xad\xeb\xcb\xac\x9c\x8f\xde\xa7\xe5\xce\xef\xfc\x65\x85\xd1\xdb\x50\xe6\xd2\x8f\xec\xd9\x00\x8f\x93\xe6\x23\xac\xcb\xb0\x4a\x87\xd5\x06\xce\x1a\xbb\xb0\xc3\x68\xc2\x4f\xa7\x11\x15\x34\xc6\x71\x89\x58\x4f\xc6\x7d\x66\x69\xcc\x8e\xc1\xdb\x10\x51\xf0\x31\xfa\xb3\x4a\xe3\x9c\x3c\x85\x96\xfa\xc4\x2d\x91\x8e\xdc\xfe\x9b\xfd\x61\x4e\xf5\xba\x5c\xfc\x0b\x00\x00\xff\xff\x3d\x7e\x41\xe5\x9f\x03\x00\x00")

func rs_repeatCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_repeatCsGlsl,
		"RS_Repeat.cs.glsl",
	)
}

func rs_repeatCsGlsl() (*asset, error) {
	bytes, err := rs_repeatCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Repeat.cs.glsl", size: 927, mode: os.FileMode(438), modTime: time.Unix(1528783900, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rs_uniformCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\x06\x7f\x87\x81\xbd\x48\xad\xd7\x4e\xec\x64\x2f\x26\x87\xc2\x42\x09\xb4\xbd\xb4\x85\xde\x82\x62\x8f\xd3\xa1\x8a\x26\xc8\x8a\x37\xde\xb2\xdf\xbd\xc8\xaa\xff\x2c\x2d\x7b\x11\xd6\x78\xde\x6f\xe6\x3d\xfb\xae\x43\xdb\x12\x1b\xd8\x14\xab\x38\x8a\xa3\xbb\x1a\x1b\x32\x08\x9f\x3f\xfc\xf8\xbe\xff\xf2\x6d\xfd\x00\x0f\xdb\x6d\xb1\xf5\xaf\xe2\x48\xab\x9e\xaf\x4e\xd8\xd3\x51\x15\x79\x93\xc0\x91\x4c\x4d\xe6\x04\x3b\x58\x49\xb8\x1a\x6a\xd8\x9e\x81\xce\xea\x84\xf9\x23\x58\x6c\xaf\xda\x95\xb3\xaa\xc8\x69\x29\x59\xcf\x92\x8a\x7f\xa2\x45\xe3\xc0\xa2\xaa\xd9\xe8\x1e\x68\xa4\x3c\xb1\xfd\xd5\x5e\x54\x85\x65\x1c\x65\xd9\x7c\x9d\xb0\xad\xab\x37\xc5\x6a\x09\xce\x25\x1c\xaf\x4d\x83\x76\xc6\x1d\x5a\xa7\xac\x83\xdf\x71\x04\x00\x40\x1d\x56\x39\x0c\xa5\x32\x8e\x5e\xca\x37\x58\xc5\x7f\x58\x15\x6b\xb6\x23\xab\xc3\x6a\x03\x43\xe5\x15\x0a\x84\xe6\x4a\xe9\x43\x4b\xcf\x78\xb8\x79\xb7\x09\x2c\x2a\x7d\xf0\x4f\xa6\xf4\xb1\x76\x4c\x35\x9c\x15\x19\x21\x5f\xaf\x78\xe1\x16\x76\xe1\x59\x9c\xf4\xe1\xa3\xe6\xa3\xd2\x7b\xd3\x71\xa5\x1c\xb1\xd9\x3f\xa6\xb7\x5e\x96\x4b\x45\x08\x3d\xe8\xfc\xf9\x7e\xb2\xe9\x7b\x1a\xcd\xca\x01\x19\x87\xa6\x45\xd8\x85\xbb\x18\xa2\xfe\xc4\xaa\x16\x53\xba\x89\x17\xcb\xf4\x26\x21\x9b\xff\x84\xbf\x90\x2c\x83\x46\xd3\x05\x3a\xb4\x8e\x2a\xa5\x43\x75\x1a\x9c\x7a\x6f\x03\xf2\x2b\x3d\xa3\x08\x75\x99\xf6\x70\xef\x07\x8b\x45\x9f\x84\x7b\x58\x4f\xd0\x45\x9c\x17\x8b\xdd\x08\x19\xf6\x0a\xa2\x64\x1e\x32\x9a\x1e\xda\x0d\x62\x0d\xbb\xf0\x11\xe0\xdd\x68\x6f\x8c\x65\xd8\xc4\xb1\xc5\x7f\x29\x09\x9c\xe9\x26\xfc\xb4\x64\x80\x84\x33\x7d\x92\x1e\xff\xf2\x27\x00\x00\xff\xff\x4e\x7e\xa8\xa7\x1a\x03\x00\x00")

func rs_uniformCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_rs_uniformCsGlsl,
		"RS_Uniform.cs.glsl",
	)
}

func rs_uniformCsGlsl() (*asset, error) {
	bytes, err := rs_uniformCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RS_Uniform.cs.glsl", size: 794, mode: os.FileMode(438), modTime: time.Unix(1528781008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _utilMixingCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x6a\xc3\x30\x14\x45\x77\x83\xff\xe1\x42\x17\x19\x44\x48\x9d\x6c\x21\x5b\xa0\x04\xba\xf5\x03\xcc\x93\xac\x98\x07\xb2\x5e\xb1\x15\xd5\x6e\xe9\xbf\x17\xd9\x43\x5b\x02\x1e\x04\xe2\xea\x1c\xdd\xfb\x94\xdc\x30\xb2\x04\x1c\x0f\xfb\xb2\x28\x0b\x4f\xb3\xdc\xa3\x1a\x3a\x43\x87\xfa\xa6\x61\x38\xb4\x1c\x3a\x9c\xb1\xaf\x70\x0f\x7c\x93\xa1\x07\xf7\xd4\xb9\xfa\x82\x28\xa7\x2d\xe3\xf9\xd1\xa0\x4d\xa1\x7e\x14\xcc\xe9\x77\x15\x94\x17\x4b\xbe\x19\xf9\xd3\x35\x53\x2e\xd0\xf8\x93\xcc\x6b\x25\x87\x45\x49\xc2\x2d\x7a\xe2\xa0\x2a\x7c\x95\x05\x00\x70\x72\xb6\xc6\xbb\x8c\x38\xaf\x77\xd5\xf9\xe6\xc5\x8b\x21\x7f\x0d\x49\x2c\x45\x96\x70\xbd\xec\xa6\xb9\x3a\xad\x46\x72\xf6\x08\x4b\x99\xcf\x7b\x5e\x85\x5a\x45\x3a\x7f\xf1\x9f\x30\x1b\xc4\x92\xbf\x45\x19\x9c\x8a\xb2\xbc\x68\xf4\x3c\x29\x4b\x1a\xd6\xe4\xb3\xfb\xa8\x32\xfc\x5d\x16\x3f\x01\x00\x00\xff\xff\xf9\x7a\x03\x80\x8e\x01\x00\x00")

func utilMixingCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_utilMixingCsGlsl,
		"util-Mixing.cs.glsl",
	)
}

func utilMixingCsGlsl() (*asset, error) {
	bytes, err := utilMixingCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "util-Mixing.cs.glsl", size: 398, mode: os.FileMode(438), modTime: time.Unix(1525424395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"PR-Scanline-horizontal.glsl": prScanlineHorizontalGlsl,
	"RS_Fixed.cs.glsl": rs_fixedCsGlsl,
	"RS_Kernel_Bell.cs.glsl": rs_kernel_bellCsGlsl,
	"RS_Kernel_BicubicHalf.cs.glsl": rs_kernel_bicubichalfCsGlsl,
	"RS_Kernel_Bilinear.cs.glsl": rs_kernel_bilinearCsGlsl,
	"RS_Kernel_Hermite.cs.glsl": rs_kernel_hermiteCsGlsl,
	"RS_Kernel_Lanczos2.cs.glsl": rs_kernel_lanczos2CsGlsl,
	"RS_Kernel_Lanczos3.cs.glsl": rs_kernel_lanczos3CsGlsl,
	"RS_Kernel_MitchellOneThird.cs.glsl": rs_kernel_mitchellonethirdCsGlsl,
	"RS_Kernel_NearestNeighbor.cs.glsl": rs_kernel_nearestneighborCsGlsl,
	"RS_Repeat.cs.glsl": rs_repeatCsGlsl,
	"RS_Uniform.cs.glsl": rs_uniformCsGlsl,
	"util-Mixing.cs.glsl": utilMixingCsGlsl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"PR-Scanline-horizontal.glsl": &bintree{prScanlineHorizontalGlsl, map[string]*bintree{}},
	"RS_Fixed.cs.glsl": &bintree{rs_fixedCsGlsl, map[string]*bintree{}},
	"RS_Kernel_Bell.cs.glsl": &bintree{rs_kernel_bellCsGlsl, map[string]*bintree{}},
	"RS_Kernel_BicubicHalf.cs.glsl": &bintree{rs_kernel_bicubichalfCsGlsl, map[string]*bintree{}},
	"RS_Kernel_Bilinear.cs.glsl": &bintree{rs_kernel_bilinearCsGlsl, map[string]*bintree{}},
	"RS_Kernel_Hermite.cs.glsl": &bintree{rs_kernel_hermiteCsGlsl, map[string]*bintree{}},
	"RS_Kernel_Lanczos2.cs.glsl": &bintree{rs_kernel_lanczos2CsGlsl, map[string]*bintree{}},
	"RS_Kernel_Lanczos3.cs.glsl": &bintree{rs_kernel_lanczos3CsGlsl, map[string]*bintree{}},
	"RS_Kernel_MitchellOneThird.cs.glsl": &bintree{rs_kernel_mitchellonethirdCsGlsl, map[string]*bintree{}},
	"RS_Kernel_NearestNeighbor.cs.glsl": &bintree{rs_kernel_nearestneighborCsGlsl, map[string]*bintree{}},
	"RS_Repeat.cs.glsl": &bintree{rs_repeatCsGlsl, map[string]*bintree{}},
	"RS_Uniform.cs.glsl": &bintree{rs_uniformCsGlsl, map[string]*bintree{}},
	"util-Mixing.cs.glsl": &bintree{utilMixingCsGlsl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

